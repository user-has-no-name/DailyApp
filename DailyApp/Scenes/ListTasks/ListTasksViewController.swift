//
//  ListTasksViewController.swift
//  DailyApp
//
//  Created by Oleksandr Zavazhenko on 30/01/2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListTasksDisplayLogic: AnyObject {
  func displayFetchedTasks(viewModel: ListTasks.FetchTasks.ViewModel)
  func displayUsername(viewModel: UserInfo.FetchUsername.ViewModel)
  func displayGreetings(viewModel: ListTasks.GreetUser.ViewModel)
}

class ListTasksViewController: UITableViewController, ListTasksDisplayLogic {

  var interactor: ListTasksBusinessLogic?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }

  // MARK: Setup
  
  private func setup() {

    let viewController = self
    let interactor = ListTasksInteractor()
    let presenter = ListTasksPresenter()
    viewController.interactor = interactor
    interactor.presenter = presenter
    presenter.viewController = viewController
  }

  override func prepare(for segue: UIStoryboardSegue,
                        sender: Any?) {

    if segue.identifier == "addTaskSegue" {
      weak var viewController = segue.destination as? CreateTaskViewController
      if let vc = viewController {
        vc.delegate = self
      }

    } else if segue.identifier == "settingsSegue" {
      let viewController = segue.destination as! ProfileViewController
      viewController.delegate = self
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()
    fetchTasks()
    configUI()
    greetUser()
  }
  
  // MARK: Do something
  
  @IBOutlet weak var activityImage: UIImageView!
  @IBOutlet weak var periodOfDayLabel: UILabel!
  @IBOutlet weak var footerAddButton: UIView!
  @IBOutlet weak var usernameLabel: UILabel!
  @IBAction func addTaskButtonClicked(_ sender: UIButton) {
    performSegue(withIdentifier: "addTaskSegue", sender: self)
  }

  var categories: [ListTasks.FetchTasks.ViewModel.DisplayedCategories] = []

  func configUI() {

    fetchUsername()
    greetUser()

    tableView.rowHeight = 75
  }

  func fetchTasks() {

    let request = ListTasks.FetchTasks.Request()
    interactor?.fetchCategories(request: request)

  }

  func displayFetchedTasks(viewModel: ListTasks.FetchTasks.ViewModel) {

    categories = viewModel.categories
    tableView.reloadData()
  }

  func greetUser() {

    let now = Date()
    let request = ListTasks.GreetUser.Request(timeNow: now)

    interactor?.greetUser(request: request)

  }

  func displayGreetings(viewModel: ListTasks.GreetUser.ViewModel) {

    periodOfDayLabel.text = viewModel.greetings
    activityImage.image = UIImage(named: viewModel.activityImage)

  }

  func fetchUsername() {

    let request = UserInfo.FetchUsername.Request(userDefaultsKey: "username")

    interactor?.fetchUsername(request: request)
  }

  func displayUsername(viewModel: UserInfo.FetchUsername.ViewModel) {

    usernameLabel.text = viewModel.username

  }

  func completeTask(selectedTask: Task,
                    at indexPath: IndexPath) {

    let request = ListTasks.CompleteTask.Request(selectedTask: selectedTask)

    interactor?.completeTask(request: request)
  }
}

extension ListTasksViewController: CreateTaskVCDelegate, SettingsVCDelegate {

  func reloadData() {

    fetchTasks()
    tableView.reloadData()

  }

  func reloadUsername() {

    fetchUsername()

  }
}
