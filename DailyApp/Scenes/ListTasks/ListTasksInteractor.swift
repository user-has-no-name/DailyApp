//
//  ListTasksInteractor.swift
//  DailyApp
//
//  Created by Oleksandr Zavazhenko on 30/01/2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListTasksBusinessLogic {
  
  func fetchCategories(request: ListTasks.FetchTasks.Request)
  func completeTask(request: ListTasks.CompleteTask.Request)
  func deleteTask(request: ListTasks.DeleteTask.Request)
  
  func fetchUsername(request: UserInfo.FetchUsername.Request)
  func greetUser(request: ListTasks.GreetUser.Request)
  
}

protocol ListTasksDataStore {
  //var name: String { get set }
}

class ListTasksInteractor: ListTasksBusinessLogic, ListTasksDataStore {
  
  
  var presenter: ListTasksPresentationLogic?
  var categoryWorker: CategoryWorker?
  var taskWorker: TaskWorker?
  var userDefaultsWorker: UserDefaultsWorker?
  // MARK: Do something
  
  func fetchCategories(request: ListTasks.FetchTasks.Request) {
    categoryWorker = CategoryWorker()
    categoryWorker?.read()
    
    let categories = categoryWorker?.categories
    
    if let categories = categories {
      let response = ListTasks.FetchTasks.Response(categories: categories)
      
      presenter?.presentFetchedTasks(response: response)
    }
  }
  
  func fetchUsername(request: UserInfo.FetchUsername.Request) {
    
    userDefaultsWorker = UserDefaultsWorker()
    
    let username = userDefaultsWorker?.fetchUsername(using: request.userDefaultsKey)
    
    let response = UserInfo.FetchUsername.Response(username: username ?? "User")
    
    presenter?.presentUserName(response: response)
  }
  
  func greetUser(request: ListTasks.GreetUser.Request) {
    
    let now = request.timeNow
    
    var period: PeriodOfDaytime?
    
    let morningStart = now.dateAt(hours: 6, minutes: 1)
    let morningEnd = now.dateAt(hours: 12, minutes: 0)
    
    let afternoonStart = now.dateAt(hours: 12, minutes: 1)
    let afternoonEnd = now.dateAt(hours: 17, minutes: 0)
    
    let eveningStart = now.dateAt(hours: 17, minutes: 1)
    let eveningEnd = now.dateAt(hours: 22, minutes: 0)
    
    let nightStart = now.dateAt(hours: 22, minutes: 1)
    let nightEnd = now.dateAt(hours: 6, minutes: 0)
    
    if now >= morningStart && now <= morningEnd {
      period = .morning
    } else if now >= afternoonStart && now <= afternoonEnd {
      period = .afternoon
    } else if now >= eveningStart && now <= eveningEnd {
      period = .evening
    } else if now >= nightStart && now <= nightEnd {
      period = .night
    }
    
    let response = ListTasks.GreetUser.Response(periodOfDay: period ?? .morning)
    
    presenter?.presentGreetings(response: response)
  }
  
  func completeTask(request: ListTasks.CompleteTask.Request) {
    
    taskWorker = TaskWorker()
    taskWorker?.selectedTask = request.selectedTask
    taskWorker?.completeTask()
  }
  
  func deleteTask(request: ListTasks.DeleteTask.Request) {
    
    taskWorker = TaskWorker()
    taskWorker?.selectedTask = request.selectedTask
    taskWorker?.deleteTask()
  }
}
